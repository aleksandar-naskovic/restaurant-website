{"version":3,"sources":["components/Banner.js","components/Services.js","components/Footer.js","components/FeaturedDish.js","components/Motto.js","Data.js","pages/Home.js","pages/Menu.js","pages/Meals.js","App.js","serviceWorker.js","index.js"],"names":["Banner","title","subtitle","children","className","Services","useState","icon","info","services","map","item","Footer","FeaturedDish","image","name","class","src","alt","Motto","to","RecipeContext","React","createContext","Data","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","Provider","value","Home","useContext","slice","recipe","key","label","Menu","handleClick","e","target","onClick","console","log","onSubmit","preventDefault","type","onChange","placeholder","Dish","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sQAGe,SAASA,EAAT,GAA8C,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,SAG/C,OACE,yBAAKC,UAAU,eACb,yBAAKA,UAAU,UACb,4BAAKH,GACL,yBAAKG,UAAU,SACf,2BAAIF,GACHC,I,2BCNM,SAASE,IAAY,IAAD,EACDC,mBAAS,CACvC,CACEC,KAAK,kBAAC,IAAD,MACLN,MAAO,mBACPO,KAAM,mFAER,CACED,KAAK,kBAAC,IAAD,MACLN,MAAO,gBACPO,KAAM,mFAER,CACED,KAAK,kBAAC,IAAD,MACLN,MAAO,sBACPO,KAAM,qFAfuB,mBAC1BC,EAD0B,UAqB/B,OACE,6BAASL,UAAU,YACjB,yBAAKA,UAAU,mBACZK,EAASC,KAAI,SAACC,GACb,OACE,6BAASP,UAAU,WACjB,8BAAOO,EAAKJ,MACZ,4BAAKI,EAAKV,OACV,2BAAIU,EAAKH,Y,WChCV,SAASI,IACtB,OACE,yBAAKR,UAAU,UACX,kECJO,SAASS,EAAT,GAAqC,IAAdC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,KAE1C,OACI,yBAAKC,MAAM,QACT,yBAAKC,IAAKH,EAAOI,IAAI,SACrB,yBAAKF,MAAM,aACT,4BAAI,2BAAID,IACR,2BAAG,iDCNE,SAASI,IAEtB,OACE,yBAAKf,UAAU,gBACb,8DACA,kBAAC,IAAD,CAAMgB,GAAG,QAAQhB,UAAU,eAA3B,a,6BCLOiB,EAAgBC,IAAMC,gBAiCpBC,EA/BF,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,EAIGG,mBAAS,IAJZ,mBAIpBmB,EAJoB,KAIXC,EAJW,OAKCpB,mBAAS,IALV,mBAKpBqB,EALoB,KAKZC,EALY,OAMDtB,mBAAS,WANR,mBAMpBuB,EANoB,KAMbC,EANa,KAS3BC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAbf,WAae,oBAZd,qCAWG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAUhB,OAEI,kBAACjB,EAAckB,SAAf,CAAwBC,MAAO,CAACf,UAASC,aAAYE,YAAWE,WAAUH,SAAQE,UAC/E1B,ICrBM,SAASsC,IAAQ,IACvBhB,EAAWiB,qBAAWrB,GAAtBI,QAIP,OACE,6BACI,kBAACzB,EAAD,CAAQC,MAAM,sBAAuBC,SAAS,iDAC5C,kBAAC,IAAD,CAAMkB,GAAG,QAAQhB,UAAU,eAA3B,aAEF,kBAACC,EAAD,MACA,wBAAID,UAAU,SAAd,iBACA,yBAAKA,UAAU,iBACdqB,EAAQkB,MAAM,EAAG,GAAGjC,KAAI,SAAAkC,GAAM,OAC7B,kBAAC/B,EAAD,CACEgC,IAAKD,EAAOA,OAAOE,MACnBhC,MAAO8B,EAAOA,OAAO9B,MACrBC,KAAM6B,EAAOA,OAAOE,YAIxB,kBAAC3B,EAAD,MACA,kBAACP,EAAD,OC3BO,SAASmC,IAAQ,IAAD,EACqCL,qBAAWrB,GAAtEI,EADsB,EACtBA,QAASE,EADa,EACbA,OAAQE,EADK,EACLA,MAAOC,EADF,EACEA,SAAUF,EADZ,EACYA,UAEnCoB,GAHuB,EACuBtB,WAEhC,SAAAuB,GAClBnB,EAASmB,EAAEC,OAAOV,SAiBpB,OACE,yBAAKpC,UAAU,QACb,yBAAKA,UAAU,WACb,4BAAQA,UAAU,WAAW+C,QAASH,EAAaR,MAAM,WAAzD,WACA,4BAAQpC,UAAU,WAAW+C,QAASH,EAAaR,MAAM,QAAzD,QACA,4BAAQpC,UAAU,WAAW+C,QAASH,EAAaR,MAAM,SAAzD,SACA,4BAAQpC,UAAU,WAAW+C,QAASH,EAAaR,MAAM,QAAzD,UAIFY,QAAQC,IAAI1B,GAGV,yBAAKvB,UAAU,iBACf,kBAAC,IAAD,CAAMgB,GAAG,IAAIhB,UAAU,eAAvB,gBAEF,0BAAMkD,SAzBQ,SAAAL,GAChBA,EAAEM,iBACFzB,EAASH,GACTC,EAAU,KAsBmBxB,UAAU,eACnC,2BAAOA,UAAU,aAAaoD,KAAK,OAAOhB,MAAOb,EAAQ8B,SA/B1C,SAAAR,GACnBrB,EAAUqB,EAAEC,OAAOV,QA8BkEkB,YAAa7B,IAC9F,4BAASzB,UAAU,gBAAgBoD,KAAK,UAAxC,WAEF,yBAAKpD,UAAU,aAEbqB,EAAQf,KAAI,SAAAkC,GAAM,OAClB,yBAAKxC,UAAU,WACf,kBAACS,EAAD,CACEgC,IAAKD,EAAOA,OAAOE,MACnB/B,KAAM6B,EAAOA,OAAOE,MACpBhC,MAAO8B,EAAOA,OAAO9B,cCnDhB,SAAS6C,IACtB,OACE,gDCsBWC,MAdf,WACE,OACE,6BACE,kBAAC,EAAD,KACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtB,IACjC,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,QAAQC,UAAWhB,IACrC,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,aAAaC,UAAWJ,QCP9BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAEL,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5B,QAAQ4B,MAAMA,EAAMC,c","file":"static/js/main.8bbe8c22.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function Banner({title, subtitle, children}) {\r\n\r\n   \r\n  return(\r\n    <div className=\"defaultHero\">\r\n      <div className=\"banner\">\r\n        <h1>{title}</h1>\r\n        <div className=\"line\"></div>\r\n        <p>{subtitle}</p>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, {useState}  from 'react'\r\n\r\nimport {FaClock} from \"react-icons/fa\"\r\nimport {MdRestaurant} from \"react-icons/md\"\r\nimport {FaCarSide} from \"react-icons/fa\"\r\n\r\nexport default function Services() {\r\n  const [services, setServices] = useState([\r\n    {\r\n      icon:<MdRestaurant/>,\r\n      title: \"A BRILLIANT MENU\",\r\n      info: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatibus corrupti!\"\r\n    },\r\n    {\r\n      icon:<FaCarSide/>,\r\n      title: \"FOOD DELIVERY\",\r\n      info: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatibus corrupti!\"\r\n    },\r\n    {\r\n      icon:<FaClock/>,\r\n      title: \"OPEN 24 HOURS A DAY\",\r\n      info: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatibus corrupti!\"\r\n    }\r\n  ])\r\n    \r\n  \r\n  \r\n    return (\r\n      <section className=\"services\">   \r\n        <div className=\"services-center\">\r\n          {services.map((item) => {\r\n            return(             \r\n              <article className=\"service\">\r\n                <span>{item.icon}</span>\r\n                <h6>{item.title}</h6>\r\n                <p>{item.info}</p>\r\n              </article>\r\n            )\r\n          })}\r\n        </div>       \r\n      </section>\r\n    )\r\n  \r\n}","import React from 'react'\r\n\r\n\r\nexport default function Footer() {\r\n  return(\r\n    <div className=\"footer\">\r\n        <p>Aleksandar Naskovic Â© June 2020</p> \r\n    </div>\r\n  )\r\n}","import React   from 'react'\r\n\r\nexport default function FeaturedDish({image,name}) {\r\n\r\n  return(\r\n      <div class=\"card\">\r\n        <img src={image} alt=\"Dish\"/>\r\n        <div class=\"container\">\r\n          <h4><b>{name}</b></h4> \r\n          <p><b>$11 per portion</b></p> \r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n","import React   from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Motto() {\r\n\r\n  return(\r\n    <div className=\"home-menu-bg\">\r\n      <p>We speak the good food language</p>\r\n      <Link to=\"/menu\" className=\"btn-primary\">Our Menu</Link> \r\n    </div>\r\n  )\r\n}","import React, {useEffect, useState, createContext} from 'react';\r\n\r\n\r\nexport const RecipeContext = React.createContext()\r\n\r\nconst Data = ({children}) => {\r\n  const APP_ID = \"b28d572d\"\r\n  const APP_KEY = \"a0afc7e3d141c318678d485abdd8dec2\"\r\n\r\n  const [recipes, setRecipes] = useState([])\r\n  const [search, setSearch] = useState(\"\")\r\n  const [query, setQuery] = useState(\"chicken\")\r\n  \r\n\r\n  useEffect(() => {\r\n    getRecipes()\r\n  }, [query])\r\n  \r\n  const getRecipes = async () => {\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\r\n    const data = await response.json()\r\n    setRecipes(data.hits)\r\n  }\r\n  \r\n\r\n    \r\n  \r\n      \r\n  return(\r\n    \r\n      <RecipeContext.Provider value={{recipes, setRecipes, setSearch, setQuery, search, query}}>\r\n        {children}\r\n      </RecipeContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Data;\r\n","import React, {useContext}   from 'react'\r\nimport Banner from '../components/Banner'\r\nimport Services from '../components/Services'\r\nimport {Link} from 'react-router-dom'\r\nimport Footer from '../components/Footer'\r\nimport FeaturedDish from '../components/FeaturedDish'\r\nimport Motto from '../components/Motto'\r\nimport {RecipeContext} from '../Data'\r\n\r\n\r\nexport default function Home() {\r\n  const {recipes} = useContext(RecipeContext)\r\n\r\n  \r\n  \r\n  return(\r\n    <div>\r\n        <Banner title=\"Restaurant web site\"  subtitle=\"Restaurant app project by Aleksandar Naskovic\">\r\n          <Link to=\"/menu\" className=\"btn-primary\">Our Menu</Link>           \r\n        </Banner> \r\n        <Services/>\r\n        <h2 className=\"title\">Featured Dish</h2>\r\n        <div className=\"featured_home\">\r\n        {recipes.slice(0, 3).map(recipe =>(\r\n          <FeaturedDish \r\n            key={recipe.recipe.label}\r\n            image={recipe.recipe.image}\r\n            name={recipe.recipe.label}         \r\n          />\r\n        ))}\r\n        </div>\r\n        <Motto/>\r\n        <Footer/>\r\n    </div>\r\n  )\r\n}","import React, {useContext, useEffect} from 'react'\r\nimport FeaturedDish from '../components/FeaturedDish'\r\nimport {RecipeContext} from '../Data'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Menu() {\r\n  const {recipes, search, query, setQuery, setSearch, setRecipes} = useContext(RecipeContext)\r\n  \r\n  const handleClick = e => {\r\n    setQuery(e.target.value)\r\n  }\r\n  \r\n  const updateSearch = e => {\r\n    setSearch(e.target.value)\r\n    \r\n  }\r\n\r\n  const getSearch = e => {\r\n    e.preventDefault()\r\n    setQuery(search)\r\n    setSearch('')\r\n  }\r\n\r\n\r\n  \r\n\r\n  return(\r\n    <div className=\"menu\">\r\n      <div className=\"buttons\">\r\n        <button className=\"menu-btn\" onClick={handleClick} value=\"chicken\">Chicken</button>\r\n        <button className=\"menu-btn\" onClick={handleClick} value=\"soup\">Soup</button>\r\n        <button className=\"menu-btn\" onClick={handleClick} value=\"pizza\">Pizza</button>\r\n        <button className=\"menu-btn\" onClick={handleClick} value=\"cake\">Cakes</button>\r\n      </div>\r\n      {\r\n\r\n      console.log(search)\r\n      }\r\n      \r\n        <div className=\"menu-home-btn\">\r\n        <Link to=\"/\" className=\"btn-primary\">&#60; Home Page</Link> \r\n      </div>\r\n      <form onSubmit={getSearch} className=\"search-form\">\r\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} placeholder={query}/>\r\n        <button  className=\"search-button\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className=\"card-menu\">\r\n        {\r\n        recipes.map(recipe =>(\r\n        <div className=\"recipes\">\r\n        <FeaturedDish \r\n          key={recipe.recipe.label}\r\n          name={recipe.recipe.label} \r\n          image={recipe.recipe.image}\r\n        />\r\n        </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function Dish() {\r\n  return(\r\n    <div>hello form dish</div>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home'\nimport Menu from './pages/Menu'\nimport Dish from './pages/Meals'\nimport Data from './Data'\n\n\n\n\nfunction App() {\n  return (\n    <div>\n      <Data>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/menu\" component={Menu} />\n        <Route exact path=\"/menu/dish\" component={Dish} />\n      </Switch>\n      </Data>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  \n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}